const crypto = require('crypto');

const getMeterDataByDLMS = async (req, res) => {
    try {
        const data = req.body.number
        const value = req.body.buffer
        let result = 0
        console.log(encrypt('5991'))
        if (data == 1) {
            

            res.json({result: result})
        } else {
            res.send('success')
        }
    } catch (err) {
        console.error(`Error: ${err}`);
        res.status(500).json({ error: err.message });
    }
};

module.exports = getMeterDataByDLMS;

function encrypt(plainText, key, outputEncoding = "base64") {
    const cipher = crypto.createCipheriv("aes-128-ecb", key, null);
    return Buffer.concat([cipher.update(plainText), cipher.final()]).toString(outputEncoding);
}

function decrypt(cipherText, key, outputEncoding = "utf8") {
    const cipher = crypto.createDecipheriv("aes-128-ecb", key, null);
    return Buffer.concat([cipher.update(cipherText), cipher.final()]).toString(outputEncoding);
}




function queries() {
    const openPortCommand = [
        0x7E,
        0xA0,
        0x23,
        0x00,
        0x02,
        0x7C,
        0xDB,
        0x05,
        0x93,
        0x76,
        0x90,
        0x81,
        0x80,
        0x14,
        0x05,
        0x02,
        0x07,
        0xD0,
        0x06,
        0x02,
        0x07,
        0xD0,
        0x07,
        0x04,
        0x00,
        0x00,
        0x00,
        0x01,
        0x08,
        0x04,
        0x00,
        0x00,
        0x00,
        0x01,
        0x3A,
        0xF2,
        0x7E
        ]

    const passwordCommand = [
        0x7E,
        0xA0,
        0x4B,
        0x00,
        0x02,
        0x7C,
        0xDB,
        0x05,
        0x10,
        0x8C,
        0x5C,
        0xE6,
        0xE6,
        0x00,
        0x60,
        0x39,
        0x80,
        0x02,
        0x07,
        0x80,
        0xA1,
        0x09,
        0x06,
        0x07,
        0x60,
        0x85,
        0x74,
        0x05,
        0x08,
        0x01,
        0x01,
        0x8A,
        0x02,
        0x07,
        0x80,
        0x8B,
        0x07,
        0x60,
        0x85,
        0x74,
        0x05,
        0x08,
        0x02,
        0x01,
        0xAC,
        0x0A,
        0x80,
        0x08,
        0x30,
        0x30,
        0x30,
        0x30,
        0x30,
        0x30,
        0x30,
        0x30,
        0xBE,
        0x10,
        0x04,
        0x0E,
        0x01,
        0x00,
        0x00,
        0x00,
        0x06,
        0x5F,
        0x1F,
        0x04,
        0x00,
        0x62,
        0x1E,
        0x5D,
        0xFF,
        0xFF,
        0xE9,
        0xF3,
        0x7E
        ]


    const currentTime = [
       0x7E,
       0xA0,
       0x23,
       0x00,
       0x02,
       0x5C,
       0xCF,
       0x05,
       0x93,
       0xD1,
       0xF9,
       0x81,
       0x80,
       0x14,
       0x05,
       0x02,
       0x07,
       0xD0,
       0x06,
       0x02,
       0x07,
       0xD0,
       0x07,
       0x04,
       0x00,
       0x00,
       0x00,
       0x01,
       0x08,
       0x04,
       0x00,
       0x00,
       0x00,
       0x01,
       0x3A,
       0xF2,
       0x7E,
       ];
    const currentTime1 = [0x7E, 0xA0, 0x1C, 0x00, 0x02, 0x7C, 0xDB, 0x05, 0x32, 0x4B, 0xEB, 0xE6, 0xE6, 0x00, 0xC0, 0x01, 0xC1, 0x00, 0x08, 0x00, 0x00, 0x01, 0x00, 0x00, 0xFF, 0x02, 0x00, 0x60, 0x1A, 0x7E]

    const closeCommand = [0x7E, 0xA0, 0x0A, 0x00, 0x02, 0x7C, 0xDB, 0x05, 0x53, 0xC0, 0x74, 0x7E]
    return {
        openPortCommand,
        passwordCommand,
        currentTime,
        currentTime1,
        closeCommand
    }
}

